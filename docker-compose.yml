version: '3.7'

services:
  hasura:
    image: hasura/graphql-engine:latest
    container_name: indexer-hasura
    restart: always
    env_file:
      - .env
    network_mode: host
    environment:
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup
      HASURA_GRAPHQL_METADATA_DATABASE_URL: ${METADATA_DATABASE_URL}
      HASURA_GRAPHQL_DATABASE_URL: ${DATABASE_URL}
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_PASSWORD}

  eth-indexer:
    container_name: eth-indexer
    image: indexer:latest
    restart: on-failure
    env_file:
      - .env
    command: "evm-indexer --batch-size 500 --workers 20"
    network_mode: host

  polygon-indexer:
    container_name: polygon-indexer
    image: indexer:latest
    restart: on-failure
    env_file:
      - .env
    command: "evm-indexer --chain polygon"
    network_mode: host

  fantom-indexer:
    container_name: fantom-indexer
    image: indexer:latest
    restart: on-failure
    env_file:
      - .env
    command: "evm-indexer --chain fantom"
    network_mode: host

  optimism-indexer:
    container_name: optimism-indexer
    image: indexer:latest
    restart: on-failure
    env_file:
      - .env
    command: "evm-indexer --chain optimism"
    network_mode: host

  gnosis-indexer:
    container_name: gnosis-indexer
    image: indexer:latest
    restart: on-failure
    env_file:
      - .env
    command: "evm-indexer --chain gnosis --batch-size 500 --workers 20"
    network_mode: host

  bsc-indexer:
    container_name: bsc-indexer
    image: indexer:latest
    restart: on-failure
    env_file:
      - .env
    command: "evm-indexer --chain bsc"
    network_mode: host

  avalanche-indexer:
    container_name: avalanche-indexer
    image: indexer:latest
    restart: on-failure
    env_file:
      - .env
    command: "evm-indexer --chain avalanche  --batch-size 500 --workers 20"
    network_mode: host